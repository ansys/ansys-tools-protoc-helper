name: GitHub CI
# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
  workflow_dispatch:

env:
  MAIN_PYTHON_VERSION: '3.11'

jobs:
  pre-commit:
    name: Pre-commit checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ env.MAIN_PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install development requirements
        run: |
          pip install .[pre-commit]

      - name: Run pre-commit
        run: |
          pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
  test:
    name: Run tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install development requirements
        run: |
          pip install .[test]

      - name: Run tests
        run: |
          cd test
          pytest -v
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install library
        run: pip install .[doc]

      - name: Build HTML
        run: |
          make -C doc html SPHINXOPTS="-W"
          touch doc/build/html/.nojekyll

      - name: Build PDF Documentation
        run: |
          sudo apt update
          sudo apt-get install -y texlive-latex-extra latexmk
          make -C doc latexpdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v4
        with:
          name: Documentation-html
          path: doc/build/html
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v4
        with:
          name: Documentation-pdf
          path: doc/build/latex/*.pdf
          retention-days: 7

      - name: Deploy docs
        if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@v4.6.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: doc/build/html

  deploy:
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [docs, test]
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4

    - name: Display structure of downloaded files
      run: ls -R

    - name: Build
      run: |
        pip install build
        python -m build

    - name: Upload to Public PyPi
      run: |
        pip install twine
        twine upload --skip-existing dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        generate_release_notes: true
        files: |
          ./**/*.whl
          ./**/*.pdf
